{"version":3,"sources":["containers/Main/Main.module.scss","containers/Overview/Chart/Chart.module.scss","containers/Overview/RecordList/RecordList.module.scss","containers/Remind/Remind.module.scss","containers/CategoryView/Chart/Chart.module.scss","containers/CategoryView/RecordList/RecordList.module.scss","images/system/評價我們.svg","images/system/刪除.svg","components/UI/Navbar/Navbar.module.scss","components/UI/Grids/Grid/Grid.module.scss","components/UI/Grids/Grids.module.scss","containers/LogRecord/LogRecord.module.scss","components/Add/Add.module.scss","components/Edit/Edit.module.scss","containers/Overview/Overview.module.scss","containers/Setting/Setting.module.scss","containers/CategoryView/CategoryView.module.scss","images/system sync /^/.//.*/.svg$","images/system/圖表.svg","images/system/導出.svg","images/system/登入.svg","images/system/設置.svg","images/system/關於.svg","images/system/類別.svg","containers/Main/Balance/Balence.module.scss","images/system/載入.jpg","firebase.ts","store/record/reducers.ts","store/reminder/reducers.ts","store/index.ts","store/record/action-types.ts","store/month/reducers.ts","store/month/action-types.ts","store/user/reducers.ts","store/user/action-types.ts","store/reminder/action-types.ts","api/firebase.ts","model/base-model.ts","model/money-record.ts","model/reminder.ts","containers/App/ReminderTimer/ReminderTimer.tsx","api/storage.ts","api/index.ts","store/record/actions.ts","store/reminder/actions.ts","components/UI/Navbar/Navbar.tsx","components/UI/Grids/Grid/Grid.tsx","components/UI/Grids/Grids.tsx","utils/other.ts","components/TypeSelect/TypeSelect.tsx","components/Inputs/Inputs.tsx","components/DateSelect/DateSelect.tsx","containers/LogRecord/LogRecord.tsx","containers/Main/Balance/Balance.tsx","components/Add/Add.tsx","components/UI/Mask/Mask.tsx","components/UI/Modal/Modal.tsx","containers/Main/Sidebar/Review/Review.tsx","containers/Main/Sidebar/About/About.tsx","store/user/actions.ts","utils/auth.ts","containers/Main/Sidebar/Sidebar.tsx","containers/Main/Sidebar/ExportData/index.ts","components/MonthSelect/MonthSelect.tsx","components/MonthRecord/DayRecord/DayRecord.tsx","components/MonthRecord/MonthRecord.tsx","store/month/actions.ts","containers/Main/Main.tsx","components/Edit/Edit.tsx","containers/Detail/Detail.tsx","containers/Overview/Chart/Chart.tsx","containers/Overview/RecordList/RecordItem/RecordItem.tsx","containers/Overview/RecordList/RecordList.tsx","containers/Overview/Overview.tsx","containers/Setting/Setting.tsx","containers/Remind/Remind.tsx","containers/CategoryView/Chart/Chart.tsx","containers/CategoryView/RecordList/RecordItem/RecordItem.tsx","containers/CategoryView/RecordList/RecordList.tsx","containers/CategoryView/CategoryView.tsx","containers/App/Start/Start.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx","containers/Main/Sidebar/Sidebar.module.scss","components/TypeSelect/TypeSelect.module.scss","components/MonthRecord/DayRecord/DayRecord.module.scss","containers/Detail/Detail.module.scss","containers/CategoryView/RecordList/RecordItem/RecordItem.module.scss","containers/Overview/RecordList/RecordItem/RecordItem.module.scss","components/MonthSelect/MonthSelect.module.scss","components/Inputs/Inputs.module.scss","components/DateSelect/DateSelect.module.scss"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","initialState","rootReducer","combineReducers","records","state","action","type","payload","key","value","assign","month","Date","user","reminders","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","store","createStore","composeWithDevTools","getUid","getState","uid","firebaseRecord","ref","firebaseRemind","reqGetRecord","filter","a","userRecord","child","startAt","moment","format","endAt","orderByChild","once","snapShot","orderByKey","equalTo","val","reqAddRecord","option","push","reqUpdateRecord","config","update","reqDeleteRecord","remove","reqAddReminder","time","userRemind","on","reqDelReminder","reqGetReminder","reqModReminder","BaseModel","MoneyRecord","amount","date","category","mark","Promise","reject","now","Math","random","data","localStorage","setItem","JSON","stringify","some","result","entries","record","parse","getItem","Reminder","timer","find","save","delete","API","Proxy","get","_","property","firebaseApi","storageApi","recordAdd","recordDel","recordGet","getRecord","dispatch","reminderAdd","reminder","reminderDel","reminderGet","getReminder","Navbar","leftIcon","mainItem","rightIcon","className","classes","Grid","clicked","onClick","Grids","icons","icon","i","text","trans","proxyR","costRecords","benefitRecords","costTotal","benefitTotal","forEach","balance","Option","active","classNames","Active","join","TypeSelect","changed","useState","isShow","setIsShow","clickHandlerWith","changeType","Mask","style","display","Main","dropdown","Pop","Inputs","markChanged","amountChanged","submit","numberInput","useRef","focusNumberInput","setTimeout","current","focus","useEffect","data-img","Input","onChange","onBlur","placeholder","Number","onVirtualKeyboardConfirm","String","DateSelect","dateChanged","togglerHandler","show","Toggle","Dropdown","visible","onCancel","onConfirm","day","defaultTimeValue","LogRecord","gridClickHandler","setState","typeChangeHandler","amountChangeHandler","markChangeHandler","dateChangeHandler","submitHandler","props","match","params","alert","modRecord","addRecord","history","go","this","showIcons","item","Component","withRouter","connect","benefitClass","Benefit","costClass","Cost","balanceClass","Balance","Block","Title","Add","to","position","top","left","right","bottom","backgroundColor","zIndex","padding","transform","borderRadius","boxShadow","Modal","children","onLeft","elRef","document","createElement","modalRoot","getElementById","modal","appendChild","removeChild","ele","createPortal","Review","window","location","href","color","Array","from","length","src","require","alt","height","About","SetUser","userSet","logout","signOut","login","provider","GoogleAuthProvider","signInWithRedirect","Item","path","filename","ShowModal","setShowModal","showModal","listClassName","List","concat","Sidebar","Avatar","photoURL","displayName","Log","thumb","flatRows","values","row","unshift","csvStr","reduce","str","encodedUri","encodeURIComponent","link","setAttribute","body","click","exportData","MonthSelect","monthChanged","setVal","isHidden","Monthpicker","mode","dayData","accu","cost","benefit","formatDate","DayRecord","Info","Total","Amount","MonthRecord","monthDataByDate","monthData","obj","indexByDate","sortedMonthData","sort","b","entry","setMonth","monthSet","isShowSidebar","leftSidebarHandler","clickSidebarHandler","monthChangedHandler","proxyRecords","Notice","size","Edit","Detail","deleteHandler","confirm","delRecord","COLORS","categories","total","canvasRef","ctx","getContext","restSum","splice","labels","numbers","ratios","n","toFixed","Chartjs","defaults","global","elements","arc","borderWidth","datasets","options","legend","align","boxWidth","fontColor","shift","Chart","replace","reverse","ratio","bar","Wrapper","Ratio","percent","barStyle","borderColor","unfilled","RecordList","Overview","canvas","createRef","sortedCategories","nextProps","showRecords","showTotal","categoriesMap","cate","Brief","Setting","getReminderTimes","times","arrow","multipleLine","Remind","isOpen","momnet","pickerChangeHandler","addReminder","timeChangerHandler","target","delReminder","modReminder","clickAddHandler","Notification","permission","requestPermission","extra","checked","border","Plus","open","fill","scales","xAxes","gridLines","yAxes","ticks","sortedRecords","monthArr","daysInMonth","monthAmountArr","arr","amountIndexedByDate","query","URLSearchParams","search","categoryRecords","CategoryView","getAmountIndexedByDate","backgroundSize","backgroundImage","Start","React","memo","setShow","toRemind","remainTime","today","flatMap","getClosestTime","clearTimeout","notice","onshow","close","ANIMATION_MAP","PUSH","POP","Routes","TransitionGroup","childFactory","cloneElement","CSSTransition","timeout","pathname","component","App","onAuthStateChanged","currentUser","email","console","count","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05b75226.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__32U6n\",\"Notice\":\"Main_Notice__Mc6bU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"Chart_Chart__1ni9I\",\"Total\":\"Chart_Total__1OcVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecordList\":\"RecordList_RecordList__2g_qn\",\"Title\":\"RecordList_Title__5F56x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Remind\":\"Remind_Remind__1YzWX\",\"Plus\":\"Remind_Plus__2FLth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"Chart_Chart__3CiFs\",\"Total\":\"Chart_Total__1PUf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecordList\":\"RecordList_RecordList__e-D4p\",\"Title\":\"RecordList_Title__3Fafu\"};","module.exports = __webpack_public_path__ + \"static/media/評價我們.384b3781.svg\";","module.exports = __webpack_public_path__ + \"static/media/刪除.650cdc57.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__I_G9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"Grid_Grid__3iuvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grids\":\"Grids_Grids__1Wq6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogRecord\":\"LogRecord_LogRecord__1G1ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Add\":\"Add_Add__2jTPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Edit\":\"Edit_Edit___HoDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overview\":\"Overview_Overview__zwQtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Setting\":\"Setting_Setting__WMx6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CategoryView\":\"CategoryView_CategoryView__mOlQd\"};","var map = {\n\t\"./刪除.svg\": 140,\n\t\"./圖表.svg\": 258,\n\t\"./導出.svg\": 259,\n\t\"./登入.svg\": 260,\n\t\"./設置.svg\": 261,\n\t\"./評價我們.svg\": 139,\n\t\"./關於.svg\": 262,\n\t\"./類別.svg\": 263\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 257;","module.exports = __webpack_public_path__ + \"static/media/圖表.718c793e.svg\";","module.exports = __webpack_public_path__ + \"static/media/導出.24a1375a.svg\";","module.exports = __webpack_public_path__ + \"static/media/登入.5fec04de.svg\";","module.exports = __webpack_public_path__ + \"static/media/設置.7af33545.svg\";","module.exports = __webpack_public_path__ + \"static/media/關於.eca1b978.svg\";","module.exports = __webpack_public_path__ + \"static/media/類別.78494bd2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balence_Balance__3F6zA\",\"Benefit\":\"Balence_Benefit__1d3GR\",\"Cost\":\"Balence_Cost__1Gn-z\",\"Block\":\"Balence_Block__38NBK\",\"Title\":\"Balence_Title__2b8WJ\",\"Number\":\"Balence_Number__3gKnm\"};","module.exports = __webpack_public_path__ + \"static/media/載入.68228cc4.jpg\";","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDmDtZQueyX0QHZjFBCFwSNdorl2H8HAIw',\n  authDomain: 'money-manager-a21b9.firebaseapp.com',\n  databaseURL: 'https://money-manager-a21b9.firebaseio.com',\n  projectId: 'money-manager-a21b9',\n  storageBucket: 'money-manager-a21b9.appspot.com',\n  // messagingSenderId: \"sender-id\",\n  // appId: \"app-id\",\n  // measurementId: \"G-measurement-id\",\n}\n\nfirebase.initializeApp(firebaseConfig)\n","import { ADD_RECORD, MOD_RECORD, DEL_RECORD, GET_RECORD } from './action-types'\nimport { RecordActionTypes } from './actions'\nimport { IFbRecords } from 'typings'\n\nconst initialState = {} as IFbRecords\n\nexport const recordReducer = (\n  state = initialState,\n  action: RecordActionTypes\n): IFbRecords => {\n  switch (action.type) {\n    case ADD_RECORD: {\n      const { key, value } = action.payload\n      return { [key]: value, ...state }\n    }\n    case DEL_RECORD: {\n      delete state[action.payload]\n      return { ...state }\n    }\n    case MOD_RECORD: {\n      const { key, value } = action.payload\n      state[key] = Object.assign(state[key], value)\n      return { ...state }\n    }\n    case GET_RECORD: {\n      return action.payload\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  ADD_REMINDER,\n  MOD_REMINDER,\n  DEL_REMINDER,\n  GET_REMINDER,\n} from './action-types'\nimport { ReminderActionTypes } from './actions'\nimport { IFbReminders } from 'typings'\n\nconst initialState = {} as IFbReminders\n\nexport const reminderReducer = (\n  state = initialState,\n  action: ReminderActionTypes\n): IFbReminders => {\n  switch (action.type) {\n    case ADD_REMINDER: {\n      const { key, value } = action.payload\n      return { ...state, [key]: value }\n    }\n    case DEL_REMINDER: {\n      delete state[action.payload]\n      return { ...state }\n    }\n    case MOD_REMINDER: {\n      const { key, value } = action.payload\n      state[key] = Object.assign(state[key], value)\n      return { ...state }\n    }\n    case GET_REMINDER: {\n      return action.payload\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { recordReducer } from './record/reducers'\nimport { monthReducer } from './month/reducers'\nimport { userReducer } from './user/reducers'\nimport { reminderReducer } from './reminder/reducers'\n\nconst rootReducer = combineReducers({\n  records: recordReducer,\n  month: monthReducer,\n  user: userReducer,\n  reminders: reminderReducer,\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nconst middlewares = [thunkMiddleware]\nconst middleWareEnhancer = applyMiddleware(...middlewares)\n\nconst store = createStore(rootReducer, composeWithDevTools(middleWareEnhancer))\n\nexport default store\n","export const ADD_RECORD = \"add_record\"\nexport const DEL_RECORD = \"del_record\"\nexport const MOD_RECORD = \"mod_record\"\nexport const GET_RECORD = \"get_record\"","import { SET_MONTH } from './action-types'\nimport { MonthActionTypes } from './actions'\n\nexport const monthReducer = (state = new Date(), action: MonthActionTypes) => {\n  switch (action.type) {\n    case SET_MONTH:\n      return action.payload\n    default:\n      return state\n  }\n}\n","export const SET_MONTH = 'set_month'\n","import { SET_USER } from './action-types'\nimport { UserActionTypes } from './actions'\nimport { User } from 'typings'\n\nexport const userReducer = (state: User = null, action: UserActionTypes) => {\n  switch (action.type) {\n    case SET_USER:\n      return action.payload\n    default:\n      return state\n  }\n}\n","export const SET_USER = 'set_user'\n","export const GET_REMINDER = 'get_reminder'\nexport const ADD_REMINDER = 'add_reminder'\nexport const DEL_REMINDER = 'del_reminder'\nexport const MOD_REMINDER = 'mod_reminder'\n","import * as firebase from 'firebase/app'\nimport 'firebase/database'\nimport moment from 'moment'\n\nimport store from 'store'\n\nimport { IRecord, IFbRecords, IReminder, IFbReminders } from 'typings'\n\nconst getUid = () => store.getState().user!.uid\nconst firebaseRecord = firebase.database().ref('record')\nconst firebaseRemind = firebase.database().ref('remind')\n\nexport const reqGetRecord = async (filter: Date | string) => {\n  const userRecord = firebaseRecord.child(getUid())\n  let snapShot\n  if (filter instanceof Date) {\n    const startAt = moment(filter).format('YYYY-MM-01')\n    const endAt = moment(filter).format('YYYY-MM-31')\n    snapShot = await userRecord\n      .orderByChild('date')\n      .startAt(startAt)\n      .endAt(endAt)\n      .once('value')\n  } else if (typeof filter === 'string') {\n    snapShot = await userRecord.orderByKey().equalTo(filter).once('value')\n  } else {\n    snapShot = await userRecord.once('value')\n  }\n  return (snapShot.val() as IFbRecords) || {}\n}\n\nexport const reqAddRecord = async (option: IRecord) => {\n  const userRecord = firebaseRecord.child(getUid())\n  const ref = await userRecord.push(option)\n  const snapShot = await ref.once('value')\n  return { key: ref.key, value: snapShot.val() }\n}\n\nexport const reqUpdateRecord = async (\n  key: string,\n  config: Partial<IRecord>\n) => {\n  const userRecord = firebaseRecord.child(getUid())\n  const ref = userRecord.child(key)\n  await ref.update(config)\n  const snapShot = await ref.once('value')\n  return { key: ref.key, value: snapShot.val() }\n}\n\nexport const reqDeleteRecord = async (key: string) => {\n  const userRecord = firebaseRecord.child(getUid())\n  const ref = userRecord.child(key)\n  await ref.remove()\n  return true\n}\n\nexport const reqAddReminder = async (time: string) => {\n  const userRemind = firebaseRemind.child(getUid())\n  const ref = await userRemind.push({ time, on: true })\n  const snapShot = await ref.once('value')\n  return { key: ref.key, value: snapShot.val() }\n}\n\nexport const reqDelReminder = async (key: string) => {\n  const userRemind = firebaseRemind.child(getUid())\n  const ref = userRemind.child(key)\n  await ref.remove()\n  return true\n}\n\nexport const reqGetReminder = async () => {\n  const userRemind = firebaseRemind.child(getUid())\n  const snapShot = await userRemind.once('value')\n  return (snapShot.val() as IFbReminders) || {}\n}\n\nexport const reqModReminder = async (\n  key: string,\n  config: Partial<IReminder>\n) => {\n  const userRemind = firebaseRemind.child(getUid())\n  const ref = userRemind.child(key)\n  await ref.update(config)\n  const snapShot = await ref.once('value')\n  return { key: ref.key, value: snapShot.val() }\n}\n","abstract class BaseModel {\n  public abstract save(): void\n  public abstract delete(): void\n  public abstract update(config: any): void\n}\n\nexport default BaseModel\n","import BaseModel from './base-model'\nimport { IRecord } from 'typings'\nimport moment from 'moment'\n\nconst MONEYRECORD = 'MONEYRECORD'\ninterface IMoneyRecords {\n  [key: string]: MoneyRecord\n}\n\nclass MoneyRecord extends BaseModel {\n  public type: string\n  public amount: number\n  public date: string\n  public category: string\n  public mark: string\n  public constructor({ type, amount, date, category, mark }: IRecord) {\n    super()\n    this.type = type\n    this.amount = amount\n    this.date = date\n    this.category = category\n    this.mark = mark\n  }\n  public static data: IMoneyRecords = JSON.parse(\n    localStorage.getItem(MONEYRECORD) || '{}'\n  )\n  public save() {\n    return new Promise((resolve, reject) => {\n      const key = Date.now() + ' ' + Math.random()\n      MoneyRecord.data[key] = this\n      localStorage.setItem(MONEYRECORD, JSON.stringify(MoneyRecord.data))\n      resolve({ key, value: this })\n    })\n  }\n  public delete() {\n    return new Promise((resolve, reject) => {\n      const data = MoneyRecord.data\n      Object.keys(data).some((key) => {\n        if (data[key] === this) {\n          return delete data[key]\n        }\n        return false\n      })\n      localStorage.setItem(MONEYRECORD, JSON.stringify(MoneyRecord.data))\n      resolve(true)\n    })\n  }\n  public update(config: Partial<IRecord>) {\n    return new Promise((resolve, reject) => {\n      Object.assign(this, config)\n      localStorage.setItem(MONEYRECORD, JSON.stringify(MoneyRecord.data))\n      resolve(true)\n    })\n  }\n\n  public static update(key: string, config: Partial<IRecord>) {\n    return new Promise<boolean>((resolve, reject) => {\n      Object.assign(this.data[key], config)\n      localStorage.setItem(MONEYRECORD, JSON.stringify(MoneyRecord.data))\n      resolve(true)\n    })\n  }\n  public static delete(key: string) {\n    return new Promise<boolean>((resolve, reject) => {\n      delete MoneyRecord.data[key]\n      localStorage.setItem(MONEYRECORD, JSON.stringify(MoneyRecord.data))\n      resolve(true)\n    })\n  }\n  public static find(filter?: string | Date): Promise<IMoneyRecords> {\n    return new Promise((resolve, reject) => {\n      if (filter instanceof Date) {\n        const result = {} as IMoneyRecords\n        const startAt = moment(filter).format('YYYY-MM-01')\n        const endAt = moment(filter).format('YYYY-MM-31')\n        for (const [key, record] of Object.entries(this.data)) {\n          if (record.date >= startAt && record.date <= endAt) {\n            result[key] = record\n          }\n        }\n        resolve(result)\n      } else if (typeof filter === 'string') {\n        resolve({ [filter]: this.data[filter] })\n      } else {\n        resolve(this.data)\n      }\n    })\n  }\n}\n\nexport default MoneyRecord\n","import BaseModel from './base-model'\nimport { IReminder } from 'typings'\nconst REMINDER = 'REMINDER'\ninterface IReminders {\n  [key: string]: Reminder\n}\n\nclass Reminder extends BaseModel {\n  public on = true\n  public constructor(public time: string) {\n    super()\n  }\n  public static data: IReminders = JSON.parse(\n    localStorage.getItem(REMINDER) || '{}'\n  )\n  public save() {\n    return new Promise((resolve, reject) => {\n      const key = Date.now() + ' ' + Math.random()\n      Reminder.data[key] = this\n      localStorage.setItem(REMINDER, JSON.stringify(Reminder.data))\n      resolve({ key, value: this })\n    })\n  }\n  public delete() {\n    return new Promise((resolve, reject) => {\n      const data = Reminder.data\n      Object.keys(data).some((key) => {\n        if (data[key] === this) {\n          return delete data[key]\n        }\n        return false\n      })\n      localStorage.setItem(REMINDER, JSON.stringify(Reminder.data))\n      resolve(true)\n    })\n  }\n  public update(config: Partial<IReminder>) {\n    return new Promise((resolve, reject) => {\n      Object.assign(this, config)\n      localStorage.setItem(REMINDER, JSON.stringify(Reminder.data))\n      resolve(true)\n    })\n  }\n\n  public static update(key: string, config: Partial<IReminder>) {\n    return new Promise<boolean>((resolve, reject) => {\n      Object.assign(this.data[key], config)\n      localStorage.setItem(REMINDER, JSON.stringify(Reminder.data))\n      resolve(true)\n    })\n  }\n  public static delete(key: string) {\n    return new Promise<boolean>((resolve, reject) => {\n      delete Reminder.data[key]\n      localStorage.setItem(REMINDER, JSON.stringify(Reminder.data))\n      resolve(true)\n    })\n  }\n  public static find() {\n    return new Promise((resolve, reject) => {\n      resolve(this.data)\n    })\n  }\n}\n\nexport default Reminder\n","import { FC } from 'react'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\n\nimport { AppState } from 'store'\nimport { IFbReminders } from 'typings'\n\nlet timer: number\n\nconst getClosestTime = (reminders: IFbReminders) => {\n  const today = moment().format('YYYY-MM-DD')\n  const cloestTime = Object.values(reminders)\n    // filter out closed reminders\n    .filter((time) => time.on)\n    // map into specific datetime\n    .map((time) => `${today} ${time.time}`)\n    // map into timecode\n    .map(Date.parse)\n    // take account of the next day reminders\n    .flatMap((time) => [time, time + 24 * 60 * 60 * 1000])\n    // filter out the past time\n    .filter((time) => time > Date.now())\n    // map into remining time\n    .map((time) => time - Date.now())\n    // sort in ascending order\n    .sort()\n    // get the first(smallest) one\n    .shift()\n  return cloestTime\n}\nconst toRemind = (reminders: IFbReminders) => {\n  const remainTime = getClosestTime(reminders)\n  clearTimeout(timer)\n  if (remainTime) {\n    timer = window.setTimeout(() => {\n      // ServiceWorkerRegistration.showNotification('記得記帳喔!!')\n      const notice = new Notification('記得記帳喔!!')\n      notice.onshow = () => setTimeout(() => notice.close(), 5000)\n      toRemind(reminders)\n    }, remainTime)\n  }\n}\n\ninterface IProps {\n  reminders: IFbReminders\n}\nconst ReminderTimer: FC<IProps> = ({ reminders }) => {\n  toRemind(reminders)\n  return null\n}\nconst mapStateToProps = (state: AppState) => ({ reminders: state.reminders })\nexport default connect(mapStateToProps)(ReminderTimer)\n","import MoneyRecord from 'model/money-record'\nimport Reminder from 'model/reminder'\nimport { IRecord, IReminder } from 'typings'\n\nexport const reqGetRecord = async (filter: Date | string) => {\n  return MoneyRecord.find(filter)\n}\n\nexport const reqAddRecord = async (option: IRecord) => {\n  return new MoneyRecord(option).save()\n}\n\nexport const reqUpdateRecord = async (\n  key: string,\n  config: Partial<IRecord>\n) => {\n  return MoneyRecord.update(key, config)\n}\n\nexport const reqDeleteRecord = async (key: string) => {\n  return MoneyRecord.delete(key)\n}\n\nexport const reqGetReminder = async () => {\n  return Reminder.find()\n}\n\nexport const reqAddReminder = async (time: string) => {\n  return new Reminder(time).save()\n}\n\nexport const reqModReminder = async (\n  key: string,\n  config: Partial<IReminder>\n) => {\n  return Reminder.update(key, config)\n}\n\nexport const reqDelReminder = async (key: string) => {\n  return Reminder.delete(key)\n}\n","import * as firebaseApi from './firebase'\nimport * as storageApi from './storage'\nimport store from 'store'\n\nconst API = new Proxy(\n  {},\n  {\n    get(_, property: keyof typeof firebaseApi) {\n      const storage = store.getState().user ? firebaseApi : storageApi\n      return storage[property]\n    },\n  }\n) as typeof firebaseApi\nexport default API\n","import { ADD_RECORD, MOD_RECORD, DEL_RECORD, GET_RECORD } from './action-types'\nimport API from 'api'\nimport { IRecord, IFbRecord, IFbRecords } from 'typings'\nimport { ThunkAction } from 'redux-thunk'\nimport { AppState } from '../index'\n\ntype ThunkResult<R> = ThunkAction<any, AppState, undefined, any>\ninterface IRecordAddAction {\n  type: typeof ADD_RECORD\n  payload: IFbRecord\n}\nconst recordAdd = (record: IFbRecord): IRecordAddAction => ({\n  type: ADD_RECORD,\n  payload: record,\n})\ninterface IRecordModAction {\n  type: typeof MOD_RECORD\n  payload: { key: string; value: Partial<IRecord> }\n}\nconst recordMod = (data: {\n  key: string\n  value: Partial<IRecord>\n}): IRecordModAction => ({\n  type: MOD_RECORD,\n  payload: data,\n})\ninterface IRecordDelAction {\n  type: typeof DEL_RECORD\n  payload: string\n}\nconst recordDel = (key: string): IRecordDelAction => ({\n  type: DEL_RECORD,\n  payload: key,\n})\ninterface IRecordGetAction {\n  type: typeof GET_RECORD\n  payload: IFbRecords\n}\nconst recordGet = (records: IFbRecords): IRecordGetAction => ({\n  type: GET_RECORD,\n  payload: records,\n})\nexport const addRecord = (option: IRecord): ThunkResult<void> => async (\n  dispatch\n) => {\n  const record = await API.reqAddRecord(option)\n  dispatch(recordAdd(record as IFbRecord))\n}\n\nexport const modRecord = (\n  key: string,\n  option: Partial<IRecord>\n): ThunkResult<void> => async (dispatch) => {\n  await API.reqUpdateRecord(key, option)\n  dispatch(recordMod({ key, value: option }))\n}\n\nexport const delRecord = (key: string): ThunkResult<void> => async (\n  dispatch\n) => {\n  await API.reqDeleteRecord(key)\n  dispatch(recordDel(key))\n}\n\nexport const getRecord = (filter: Date | string): ThunkResult<void> => async (\n  dispatch\n) => {\n  const records = await API.reqGetRecord(filter)\n  dispatch(recordGet(records as IFbRecords))\n}\n\nexport type RecordActionTypes =\n  | IRecordAddAction\n  | IRecordDelAction\n  | IRecordGetAction\n  | IRecordModAction\n","import {\n  ADD_REMINDER,\n  DEL_REMINDER,\n  GET_REMINDER,\n  MOD_REMINDER,\n} from './action-types'\nimport API from 'api'\nimport { IFbReminder, IFbReminders, IReminder } from 'typings'\nimport { ThunkAction } from 'redux-thunk'\nimport { AppState } from '../index'\n\ntype ThunkResult<R> = ThunkAction<any, AppState, undefined, any>\ninterface IReminderAddAction {\n  type: typeof ADD_REMINDER\n  payload: IFbReminder\n}\nconst reminderAdd = (reminder: IFbReminder): IReminderAddAction => ({\n  type: ADD_REMINDER,\n  payload: reminder,\n})\n\ninterface IReminderDelAction {\n  type: typeof DEL_REMINDER\n  payload: string\n}\nconst reminderDel = (key: string): IReminderDelAction => ({\n  type: DEL_REMINDER,\n  payload: key,\n})\n\ninterface IReminderModAction {\n  type: typeof MOD_REMINDER\n  payload: { key: string; value: Partial<IReminder> }\n}\nconst reminderMod = (data: {\n  key: string\n  value: Partial<IReminder>\n}): IReminderModAction => ({\n  type: MOD_REMINDER,\n  payload: data,\n})\n\ninterface IReminderGetAction {\n  type: typeof GET_REMINDER\n  payload: IFbReminders\n}\nconst reminderGet = (reminders: IFbReminders): IReminderGetAction => ({\n  type: GET_REMINDER,\n  payload: reminders,\n})\n\nexport const addReminder = (time: string): ThunkResult<void> => async (\n  dispatch\n) => {\n  const reminder = await API.reqAddReminder(time)\n  dispatch(reminderAdd(reminder as IFbReminder))\n}\n\nexport const modReminder = (\n  key: string,\n  option: Partial<IReminder>\n): ThunkResult<void> => async (dispatch) => {\n  await API.reqModReminder(key, option)\n  dispatch(reminderMod({ key, value: option }))\n}\n\nexport const delReminder = (key: string): ThunkResult<void> => async (\n  dispatch\n) => {\n  await API.reqDelReminder(key)\n  dispatch(reminderDel(key))\n}\n\nexport const getReminder = (): ThunkResult<void> => async (dispatch) => {\n  const reminders = await API.reqGetReminder()\n  dispatch(reminderGet(reminders as IFbReminders))\n}\n\nexport type ReminderActionTypes =\n  | IReminderAddAction\n  | IReminderDelAction\n  | IReminderGetAction\n  | IReminderModAction\n","import React, { FC, ComponentType } from 'react'\n\nimport classes from './Navbar.module.scss'\ninterface IProps {\n  leftIcon?: ComponentType | JSX.Element\n  mainItem?: ComponentType | JSX.Element\n  rightIcon?: ComponentType | JSX.Element\n}\nconst Navbar: FC<IProps> = ({ leftIcon, mainItem, rightIcon }) => {\n  return (\n    <div className={classes.Navbar}>\n      <nav>\n        {leftIcon || null}\n        {mainItem || null}\n        {rightIcon || null}\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar\n","import React, { FC } from 'react'\nimport classes from './Grid.module.scss'\nimport { Spending } from 'typings'\ninterface IProps {\n  category: string\n  type: Spending\n  clicked(cate: string): void\n}\nconst Grid: FC<IProps> = ({ category, type, clicked }) => {\n  return (\n    <div className={classes.Grid} onClick={() => clicked(category)}>\n      {/* <img src={url} alt={text} /> */}\n      <div className={`${type}-img ${category}`} />\n      <span>{category}</span>\n    </div>\n  )\n}\n\nexport default Grid\n","import React, { FC } from 'react'\n\nimport Grid from './Grid/Grid'\nimport { IIcon, Spending } from 'typings'\n\nimport classes from './Grids.module.scss'\ninterface IProps {\n  icons: IIcon[]\n  type: Spending\n  clicked(cate: string): void\n}\nconst Grids: FC<IProps> = ({ icons, clicked, type }) => {\n  return (\n    <div className={classes.Grids}>\n      {icons.map((icon, i) => {\n        return (\n          <Grid key={i} category={icon.text} type={type} clicked={clicked} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Grids\n","import { Spending, IFbRecords } from 'typings'\n\nexport const trans = (type: Spending) => (type === 'cost' ? '支出' : '收入')\nexport const reverse = (type: Spending): Spending =>\n  type === 'cost' ? 'benefit' : 'cost'\nexport const proxyR = (records: IFbRecords) => {\n  const costRecords = {} as IFbRecords\n  const benefitRecords = {} as IFbRecords\n  let costTotal = 0\n  let benefitTotal = 0\n  let balance = 0\n  Object.entries(records).forEach(([key, record]) => {\n    if (record.type === 'cost') {\n      costRecords[key] = record\n      costTotal += record.amount\n    } else {\n      benefitRecords[key] = record\n      benefitTotal += record.amount\n    }\n  })\n  balance = benefitTotal - costTotal\n  return {\n    records,\n    costRecords,\n    benefitRecords,\n    benefitTotal,\n    costTotal,\n    balance,\n  }\n}\n","import React, { useState, FC } from 'react'\nimport classes from './TypeSelect.module.scss'\n\nimport { trans } from 'utils/other'\nimport { Spending } from 'typings'\n\ninterface IOptionProps {\n  text: string\n  clicked(): void\n  active: boolean\n}\n\nconst Option: FC<IOptionProps> = ({ text, clicked, active }) => {\n  const classNames = [classes.Option]\n  if (active) {\n    classNames.push(classes.Active)\n  }\n  return (\n    <div className={classNames.join(' ')} onClick={clicked}>\n      {text}\n    </div>\n  )\n}\ninterface IProps {\n  type: Spending\n  changed(type: Spending): void\n}\nconst TypeSelect: FC<IProps> = ({ changed, type }) => {\n  const [isShow, setIsShow] = useState(false)\n  const clickHandlerWith = (changeType: Spending) => () => {\n    if (changeType !== type) {\n      changed(changeType)\n    }\n    setIsShow(false)\n  }\n\n  return (\n    <div className={classes.TypeSelect}>\n      <div\n        className={classes.Mask}\n        style={{ display: isShow ? 'block' : 'none' }}\n        onClick={() => setIsShow(false)}\n      />\n      <div className={classes.Main} onClick={() => setIsShow(!isShow)}>\n        <span>{trans(type)}</span>\n        <span className={classes.dropdown} />\n      </div>\n      <div\n        className={classes.Pop}\n        style={{ display: isShow ? 'block' : 'none' }}\n      >\n        <Option\n          text=\"支出\"\n          active={type === 'cost'}\n          clicked={clickHandlerWith('cost')}\n        />\n        <Option\n          text=\"收益\"\n          active={type === 'benefit'}\n          clicked={clickHandlerWith('benefit')}\n        />\n      </div>\n    </div>\n  )\n}\nexport default TypeSelect\n","import React, { useRef, useEffect, FC } from 'react'\nimport { InputItem } from 'antd-mobile'\nimport classes from './Inputs.module.scss'\nimport { Spending } from 'typings'\n\ninterface IProps {\n  type: Spending\n  category: string\n  amount: number\n  mark: string\n  markChanged(v: string): any\n  amountChanged(v: number): any\n  submit(): void\n}\nconst Inputs: FC<IProps> = ({\n  type,\n  category,\n  amount,\n  markChanged,\n  mark,\n  amountChanged,\n  submit,\n}) => {\n  const numberInput = useRef(null)\n  const focusNumberInput = () => {\n    // Delay focus to prevent subsequent out-of-focus event triggered by clicking grid\n    setTimeout(() => (numberInput.current as any).focus(), 100)\n  }\n  useEffect(focusNumberInput, [category])\n  return (\n    <div className={classes.Inputs}>\n      {category ? (\n        // data-img custom attribute is an attribute selector to scss file\n        <div data-img className={`${type}-img ${category} `} />\n      ) : null}\n      <div className={classes.Input}>\n        <InputItem\n          type={'text'}\n          onChange={markChanged}\n          onBlur={focusNumberInput}\n          value={mark}\n          placeholder=\"備註\"\n        />\n      </div>\n      <div className={classes.Input}>\n        <InputItem\n          ref={numberInput}\n          type={'money'}\n          onChange={(val) => amountChanged(Number(val))}\n          onVirtualKeyboardConfirm={submit}\n          value={String(amount)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Inputs\n","import React, { useState, FC } from 'react'\nimport { Calendar } from 'antd-mobile'\nimport moment from 'moment'\n\nimport classes from './DateSelect.module.scss'\n\ninterface IProps {\n  date: string\n  dateChanged: (date: string) => void\n}\nconst DateSelect: FC<IProps> = ({ date, dateChanged }) => {\n  const [isShow, setIsShow] = useState(false)\n  const togglerHandler = (show: boolean) => () => setIsShow(show)\n  const confirmHandler = (day?: Date) => {\n    dateChanged(moment(day).format('YYYY-MM-DD'))\n    setIsShow(false)\n  }\n  return (\n    <div className={classes.DateSelect}>\n      <div className={classes.Toggle} onClick={togglerHandler(true)}>\n        <span>日期：{moment(date).format('MM/DD')}</span>\n        <span className={classes.Dropdown} />\n      </div>\n      <Calendar\n        visible={isShow}\n        type={'one'}\n        onCancel={togglerHandler(false)}\n        onConfirm={confirmHandler}\n        // onSelectHasDisableDate={this.onSelectHasDisableDate}\n        // getDateExtra={this.getDateExtra}\n        defaultTimeValue={new Date()}\n      />\n    </div>\n  )\n}\n\nexport default DateSelect\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Icon } from 'antd-mobile'\nimport moment from 'moment'\n\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport Grids from 'components/UI/Grids/Grids'\nimport TypeSelect from 'components/TypeSelect/TypeSelect'\nimport Inputs from 'components/Inputs/Inputs'\nimport DateSelect from 'components/DateSelect/DateSelect'\nimport { addRecord, modRecord } from 'store/record/actions'\nimport API from 'api'\n\nimport classes from './LogRecord.module.scss'\n\nimport { IIcon, Spending } from 'typings'\n\nconst icons: IIcon[] = [\n  { type: 'cost', text: '水電費' },\n  { type: 'cost', text: '交通' },\n  { type: 'cost', text: '家' },\n  { type: 'cost', text: '車' },\n  { type: 'cost', text: '娛樂' },\n  { type: 'cost', text: '服裝' },\n  { type: 'cost', text: '保險' },\n  { type: 'cost', text: '税' },\n  { type: 'cost', text: '電話費' },\n  { type: 'cost', text: '香煙' },\n  { type: 'cost', text: '健康' },\n  { type: 'cost', text: '運動' },\n  { type: 'cost', text: '孩子' },\n  { type: 'cost', text: '寵物' },\n  { type: 'cost', text: '美容' },\n  { type: 'cost', text: '電子產品' },\n  { type: 'cost', text: '漢堡包' },\n  { type: 'cost', text: '酒類' },\n  { type: 'cost', text: '蔬菜' },\n  { type: 'cost', text: '小吃' },\n  { type: 'cost', text: '禮品' },\n  { type: 'cost', text: '社交' },\n  { type: 'cost', text: '旅行' },\n  { type: 'cost', text: '教育' },\n  { type: 'cost', text: '水果' },\n  { type: 'cost', text: '辦公' },\n  { type: 'cost', text: '書' },\n  { type: 'cost', text: '吧' },\n  { type: 'cost', text: '購物' },\n  { type: 'cost', text: '其他' },\n  { type: 'cost', text: '餐飲' },\n  { type: 'cost', text: '其他' },\n  { type: 'benefit', text: '薪水' },\n  { type: 'benefit', text: '獎金' },\n  { type: 'benefit', text: '捐贈' },\n  { type: 'benefit', text: '買賣' },\n  { type: 'benefit', text: '出租' },\n  { type: 'benefit', text: '退款' },\n  { type: 'benefit', text: '優惠卷' },\n  { type: 'benefit', text: '彩票' },\n  { type: 'benefit', text: '股息' },\n  { type: 'benefit', text: '投資' },\n  { type: 'benefit', text: '其他' },\n]\ninterface IProps {\n  addRecord: typeof addRecord\n  modRecord: typeof modRecord\n}\ninterface IState {\n  type: Spending\n  amount: number\n  mark: string\n  category: any\n  date: string\n}\nclass LogRecord extends Component<\n  RouteComponentProps<{ key?: string }> & IProps,\n  IState\n> {\n  public state = {\n    type: 'cost' as Spending,\n    amount: 0,\n    mark: '',\n    category: '',\n    date: moment().format('YYYY-MM-DD'),\n  }\n  public async componentWillMount() {\n    const { key } = this.props.match.params\n    if (key == null) {\n      return\n    }\n    const records = await API.reqGetRecord(key)\n    const record = records[key]\n    this.setState({\n      type: record.type as Spending,\n      amount: record.amount,\n      category: record.category,\n      date: record.date,\n      mark: record.mark,\n    })\n  }\n  public gridClickHandler = (category: string) => {\n    this.setState({\n      category,\n    })\n  }\n  public typeChangeHandler = (type: Spending) => this.setState({ type })\n  public amountChangeHandler = (amount: number) => this.setState({ amount })\n  public markChangeHandler = (mark: string) => this.setState({ mark })\n  public dateChangeHandler = (date: string) => this.setState({ date })\n  public submitHandler = async () => {\n    const { type, amount, category, date, mark } = this.state\n    const { key } = this.props.match.params\n    const option = { type, amount, category, date, mark }\n    if (category === '') {\n      alert('請選擇類別')\n      return\n    }\n    if (key != null) {\n      await this.props.modRecord(key, option)\n    } else {\n      await this.props.addRecord(option)\n    }\n    this.props.history.go(-1)\n  }\n  public render() {\n    const { type, amount, category, mark, date } = this.state\n    const showIcons = icons.filter((item) => item.type === type)\n    // const iconsWithImg: IIcon[] = icons\n    //   .filter((item) => item.type === type)\n    //   .map((item) => ({\n    //     ...item,\n    //     url: require(`images/icons/${item.text}.svg`),\n    //   }))\n    return (\n      <div className={classes.LogRecord}>\n        <Navbar\n          leftIcon={\n            <Icon type=\"left\" onClick={() => this.props.history.go(-1)} />\n          }\n          mainItem={<TypeSelect type={type} changed={this.typeChangeHandler} />}\n          rightIcon={\n            <DateSelect date={date} dateChanged={this.dateChangeHandler} />\n          }\n        />\n        <Grids type={type} icons={showIcons} clicked={this.gridClickHandler} />\n        <Inputs\n          type={type}\n          amount={amount}\n          mark={mark}\n          category={category}\n          amountChanged={this.amountChangeHandler}\n          markChanged={this.markChangeHandler}\n          submit={this.submitHandler}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(() => ({}), { addRecord, modRecord })(LogRecord)\n)\n","import React, { FC } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport classes from './Balence.module.scss'\n\ninterface IProps {\n  costTotal: number\n  benefitTotal: number\n  balance: number\n}\nconst Balance: FC<IProps & RouteComponentProps> = ({\n  costTotal,\n  benefitTotal,\n  balance,\n  history,\n}) => {\n  const benefitClass = [classes.Benefit, classes.Number].join(' ')\n  const costClass = [classes.Cost, classes.Number].join(' ')\n  const balanceClass = [\n    classes.Number,\n    balance > 0 ? classes.Benefit : classes.Cost,\n  ].join(' ')\n  return (\n    <div className={classes.Balance}>\n      <div\n        className={classes.Block}\n        onClick={() => history.push('/overview/benefit')}\n      >\n        <span className={classes.Title}>收入</span>\n        <span className={benefitClass}>{benefitTotal}</span>\n      </div>\n      <hr />\n      <div\n        className={classes.Block}\n        onClick={() => history.push('/overview/cost')}\n      >\n        <span className={classes.Title}>支出</span>\n        <span className={costClass}>{costTotal}</span>\n      </div>\n      <hr />\n      <div className={classes.Block}>\n        <span className={classes.Title}>結餘</span>\n        <span className={balanceClass}>{balance}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Balance)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport classes from './Add.module.scss'\nconst Add = () => {\n  return (\n    <Link to=\"/log\">\n      <div className={classes.Add}>+</div>\n    </Link>\n  )\n}\nexport default Add\n","import React, { FC } from 'react'\n\nconst Mask: FC<{ clicked(): void; show: boolean }> = ({ clicked, show }) => {\n  const style = {\n    position: 'fixed' as 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    zIndex: 9999,\n    display: show ? 'block' : 'none',\n  }\n  return <div style={style} onClick={clicked} />\n}\nexport default Mask\n","import React, { useEffect, useRef, FC } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport Mask from '../Mask/Mask'\n\nconst style = {\n  position: 'fixed' as 'fixed',\n  top: '50%',\n  left: '50%',\n  padding: '20px',\n  transform: 'translate(-50%,-50%)',\n  zIndex: 999999,\n  backgroundColor: '#fff',\n  borderRadius: '5px',\n  boxShadow: '0px 2px 3px #999',\n}\n\ninterface IProps {\n  onLeft(): void\n  show: boolean\n}\nconst Modal: FC<IProps> = ({ children, show, onLeft }) => {\n  const elRef = useRef<HTMLDivElement>(document.createElement('div'))\n  useEffect(() => {\n    const modalRoot = document.getElementById('modal')!\n    const modal = elRef.current!\n    modalRoot.appendChild(modal)\n    return () => {\n      modalRoot.removeChild(modal)\n    }\n  }, [])\n  const ele = (\n    <div>\n      <div style={style}>{children}</div>\n      <Mask clicked={onLeft} show={show} />\n    </div>\n  )\n\n  return show ? createPortal(ele, elRef.current) : null\n}\n\nexport default Modal\n","import React from 'react'\n\nconst Review = () => (\n  <div\n    onClick={() =>\n      (window.location.href =\n        'https://github.com/waterlinqq/react-money-manager')\n    }\n  >\n    <h2>請給我顆Star吧!</h2>\n    <p style={{ color: '#666' }}>前往我的github</p>\n    {Array.from({ length: 5 }).map((_, i) => (\n      <img\n        src={require('../../../../images/system/評價我們.svg')}\n        key={i}\n        alt=\"星星\"\n        style={{\n          height: '25px',\n          padding: '6px',\n          color: 'rgba(255, 217, 0, 0.876)',\n        }}\n      />\n    ))}\n  </div>\n)\nexport default Review\n","import React from 'react'\nconst About = () => (\n  <div>\n    <h3>Ｍoney Manager</h3>\n    <p>版本號 1.0.0</p>\n  </div>\n)\nexport default About","import { ThunkAction } from 'redux-thunk'\n\nimport store, { AppState } from 'store'\nimport { SET_USER } from './action-types'\nimport { User } from 'typings'\nimport { getRecord } from 'store/record/actions'\nimport { getReminder } from 'store/reminder/actions'\n\ninterface IUserSetAction {\n  type: typeof SET_USER\n  payload: User\n}\nconst userSet = (user: User): IUserSetAction => ({\n  type: SET_USER,\n  payload: user,\n})\nexport const SetUser = (\n  user: User\n): ThunkAction<any, AppState, undefined, any> => (dispatch) => {\n  // when user changed, recors and reminders should be updated.\n  // dispatching reminder and record action  must be after user updated since API method is called according to user state.\n  dispatch(userSet(user))\n  dispatch(getReminder())\n  dispatch(getRecord(store.getState().month))\n}\n\nexport type UserActionTypes = IUserSetAction\n","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport store from 'store'\n\nimport { SetUser } from 'store/user/actions'\n\nexport const logout = () => {\n  firebase.auth().signOut()\n}\n\nexport const login = async () => {\n  const provider = new firebase.auth.GoogleAuthProvider()\n  firebase.auth().signInWithRedirect(provider)\n}\n\nexport const listenAuth = () => {\n  firebase.auth().onAuthStateChanged((user) => {\n    let action\n    if (user) {\n      const { email, uid, photoURL, displayName } = firebase.auth().currentUser!\n      action = SetUser({ email, uid, photoURL, displayName })\n    } else {\n      action = SetUser(null)\n    }\n    store.dispatch(action as any)\n  })\n}\n","import React, { useState, FC } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { List } from 'antd-mobile'\nimport { connect } from 'react-redux'\n\nimport Modal from 'components/UI/Modal/Modal'\nimport Mask from 'components/UI/Mask/Mask'\nimport Review from './Review/Review'\nimport About from './About/About'\nimport { login, logout } from 'utils/auth'\nimport { AppState } from 'store'\nimport { exportData } from './ExportData'\n\nimport classes from './Sidebar.module.scss'\n\nimport { IFbRecords, User } from 'typings'\n\nconst Item = List.Item\n\nconst path = (filename: string) =>\n  require(`../../../images/system/${filename}.svg`)\n\ninterface IProps {\n  show: boolean\n  onLeft(): void\n  records: IFbRecords\n  user: User\n}\nconst Sidebar: FC<IProps & RouteComponentProps> = ({\n  show,\n  onLeft,\n  history,\n  records,\n  user,\n}) => {\n  const [ShowModal, setShowModal] = useState<JSX.Element | null>(null)\n  const showModal = (modal: JSX.Element) => () => {\n    setShowModal(modal)\n    onLeft()\n  }\n  const listClassName = [classes.List]\n    .concat(show ? classes.Active : '')\n    .join(' ')\n  return (\n    <div className={classes.Sidebar}>\n      <Modal show={!!ShowModal} onLeft={() => setShowModal(null)}>\n        {ShowModal}\n      </Modal>\n\n      <div className={listClassName}>\n        <div className={classes.Avatar} onClick={user ? logout : login}>\n          <div>\n            <img src={user?.photoURL || path('登入')} alt=\"\" />\n            <span>{user?.displayName || ''}</span>\n          </div>\n          <p className={classes.Log}>{user ? '登出' : '登入'}</p>\n        </div>\n        <List>\n          <Item\n            className={classes.Item}\n            thumb={path('圖表')}\n            onClick={() => history.push('/overview/income')}\n          >\n            <span>圖表</span>\n          </Item>\n          <hr />\n          <Item\n            className={classes.Item}\n            thumb={path('類別')}\n            onClick={() => history.push('/category')}\n          >\n            <span>類別</span>\n          </Item>\n          <Item\n            className={classes.Item}\n            thumb={path('導出')}\n            onClick={() => exportData(records)}\n          >\n            <span>導出</span>\n          </Item>\n          <Item\n            className={classes.Item}\n            thumb={path('設置')}\n            onClick={() => history.push('/setting')}\n          >\n            <span>設置</span>\n          </Item>\n          <Item\n            className={classes.Item}\n            thumb={path('評價我們')}\n            onClick={showModal(<Review />)}\n          >\n            評價我們\n          </Item>\n\n          <Item\n            className={classes.Item}\n            onClick={showModal(<About />)}\n            thumb={path('關於')}\n          >\n            <span>關於</span>\n          </Item>\n        </List>\n      </div>\n\n      <Mask show={show} clicked={onLeft} />\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppState) => ({\n  records: state.records,\n  user: state.user,\n})\nexport default withRouter(connect(mapStateToProps)(Sidebar))\n","import { IFbRecords } from 'typings'\nimport { trans } from 'utils/other'\n/**\n * Export records to csv string format and download the csv file.\n * @param rows money records to be transfromed\n */\nexport const exportData = (records: IFbRecords) => {\n  const rows = Object.values(records)\n  const flatRows = rows.map((row) => [\n    row.category,\n    row.amount,\n    row.date,\n    row.mark,\n    trans(row.type),\n  ])\n  flatRows.unshift(['類型', '金額', '日期', '備註', '分類'])\n  const csvStr = flatRows.reduce(\n    (str, row) => (str += row.join(',') + '\\r\\n'),\n    ''\n  )\n  const encodedUri = encodeURIComponent(csvStr)\n  const link = document.createElement('a')\n  link.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodedUri)\n  link.setAttribute('download', 'download.csv')\n  document.body.appendChild(link)\n  link.click()\n}\n","import React, { useState, FC } from 'react'\nimport { DatePickerView } from 'antd-mobile'\nimport moment from 'moment'\n\nimport classes from './MonthSelect.module.scss'\n\ninterface IProps {\n  month: Date\n  monthChanged(month: Date): void\n}\nconst MonthSelect: FC<IProps> = ({ month, monthChanged }) => {\n  const [val, setVal] = useState(month)\n  const [isShow, setIsShow] = useState(false)\n  const confirmHandler = () => {\n    setIsShow(false)\n    monthChanged(val)\n  }\n  const isHidden = { display: isShow ? 'block' : 'none' }\n  return (\n    <div className={classes.MonthSelect}>\n      <div onClick={() => setIsShow(!isShow)}>\n        <span>{moment(month).format('YYYY年M月')}</span>\n        <span className={classes.Dropdown} />\n      </div>\n      <div className={classes.Mask} style={isHidden} onClick={confirmHandler} />\n      <div className={classes.Monthpicker}>\n        {isShow ? (\n          <DatePickerView\n            mode={'month'}\n            value={val}\n            onChange={(value) => setVal(value)}\n          />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default MonthSelect\n","import React, { FC } from 'react'\nimport moment from 'moment'\nimport { List } from 'antd-mobile'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport classes from './DayRecord.module.scss'\nimport { IFbRecords } from 'typings'\n\ninterface IProps {\n  dayData: IFbRecords\n}\n\nconst DayRecord: FC<IProps & RouteComponentProps> = ({ dayData, history }) => {\n  const entries = Object.entries(dayData)\n  const { date } = entries[0][1]\n  const { cost, benefit } = entries.reduce(\n    (accu, [_, record]) => {\n      accu[record.type] += record.amount\n      return accu\n    },\n    { cost: 0, benefit: 0 }\n  )\n  const day =\n    '週' + ['日', '一', '二', '三', '四', '五', '六'][moment(date).day()]\n  const formatDate = moment(date).format('MM/DD')\n  return (\n    <div className={classes.DayRecord}>\n      <div className={classes.Info}>\n        <div>{`${formatDate} ${day}`}</div>\n        <div className={classes.Total}>\n          {benefit === 0 ? null : <span>收入: {benefit}</span>}\n          {cost === 0 ? null : <span>支出: {cost}</span>}\n        </div>\n      </div>\n      <List>\n        {entries.map(([key, record]) => (\n          <div\n            key={key}\n            onClick={() => history.push(`/detail/${key}`)}\n            className={classes.Item}\n          >\n            <div className={`${record.type}-img ${record.category}`} />\n            <span className={classes.Title}>{record.category}</span>\n            <span className={classes.Amount}>\n              {(record.type === 'cost' ? '-' : '') + record.amount}\n            </span>\n          </div>\n        ))}\n      </List>\n    </div>\n  )\n}\nexport default withRouter(DayRecord)\n","import React, { FC, Fragment } from 'react'\n\nimport DayRecord from './DayRecord/DayRecord'\nimport { IFbRecords } from 'typings.js'\n\ninterface IProps {\n  monthData: IFbRecords\n}\ninterface IMonthDataByDate {\n  [date: string]: IFbRecords\n}\n\nconst indexByDate = (monthData: IFbRecords) => {\n  return Object.entries(monthData).reduce((obj, [key, record]) => {\n    const date = record.date\n    if (!obj[date]) {\n      obj[date] = {} as IFbRecords\n    }\n    obj[date][key] = record\n    return obj\n  }, {} as IMonthDataByDate)\n}\nconst MonthRecord: FC<IProps> = ({ monthData }) => {\n  // debugger\n  const monthDataByDate = indexByDate(monthData)\n  const sortedMonthData = Object.entries(monthDataByDate)\n    .sort((a, b) => (a[0] > b[0] ? -1 : 1))\n    .map((entry) => entry[1])\n  // descended by date\n\n  return (\n    <Fragment>\n      {sortedMonthData.map((dayData, i) => (\n        <DayRecord dayData={dayData} key={i} />\n      ))}\n    </Fragment>\n  )\n}\n\nexport default MonthRecord\n","import { ThunkAction } from 'redux-thunk'\n\nimport { SET_MONTH } from './action-types'\nimport { getRecord } from '../record/actions'\nimport { AppState } from 'store'\n\nconst monthSet = (month: Date) => ({ type: SET_MONTH, payload: month })\n\nexport const setMonth = (\n  month: Date\n): ThunkAction<any, AppState, undefined, any> => (dispatch) => {\n  dispatch(monthSet(month))\n  // whenever month update, records should be correspondent to the month.\n  dispatch(getRecord(month))\n}\n\nexport type MonthActionTypes = ReturnType<typeof monthSet>\n","import React, { Component } from 'react'\nimport { WingBlank, NoticeBar, Icon, WhiteSpace } from 'antd-mobile'\nimport { connect } from 'react-redux'\n\nimport Balance from './Balance/Balance'\nimport Add from 'components/Add/Add'\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport Sidebar from './Sidebar/Sidebar'\nimport MonthSelect from 'components/MonthSelect/MonthSelect'\nimport MonthRecord from 'components/MonthRecord/MonthRecord'\nimport { AppState } from 'store'\nimport { setMonth } from 'store/month/actions'\nimport { proxyR } from 'utils/other'\nimport { login } from 'utils/auth'\n\nimport classes from './Main.module.scss'\n\nimport { IFbRecords, User } from 'typings'\n\ninterface IState {\n  isShowSidebar: boolean\n}\ninterface IProps {\n  records: IFbRecords\n  month: Date\n  user: User\n  setMonth: typeof setMonth\n}\nclass Main extends Component<IProps, IState> {\n  public state = {\n    isShowSidebar: false,\n  }\n  public leftSidebarHandler = () => {\n    this.setState({ isShowSidebar: false })\n  }\n  public clickSidebarHandler = () => {\n    this.setState({ isShowSidebar: !this.state.isShowSidebar })\n  }\n  public monthChangedHandler = (date: Date) => {\n    this.props.setMonth(date)\n  }\n  public render() {\n    const { records, user } = this.props\n    const proxyRecords = proxyR(records)\n    return (\n      <div className={classes.Main}>\n        <Sidebar\n          show={this.state.isShowSidebar}\n          onLeft={this.leftSidebarHandler}\n        />\n        <Navbar\n          leftIcon={<Icon type=\"ellipsis\" onClick={this.clickSidebarHandler} />}\n          mainItem={\n            <MonthSelect\n              month={this.props.month}\n              monthChanged={this.monthChangedHandler}\n            />\n          }\n        />\n        <WingBlank>\n          <WhiteSpace />\n          <Balance\n            costTotal={proxyRecords.costTotal}\n            benefitTotal={proxyRecords.benefitTotal}\n            balance={proxyRecords.balance}\n          />\n          <WhiteSpace />\n          {user ? null : (\n            <NoticeBar\n              mode=\"closable\"\n              className={classes.Notice}\n              icon={<Icon type=\"check-circle-o\" size=\"xxs\" />}\n              onClick={login}\n            >\n              請儘快登入，避免丟失數據\n            </NoticeBar>\n          )}\n          <WhiteSpace />\n          <MonthRecord monthData={records} />\n        </WingBlank>\n        <Add />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  records: state.records,\n  month: state.month,\n  user: state.user,\n})\n\nexport default connect(mapStateToProps, { setMonth })(Main)\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Icon } from 'antd-mobile'\n\nimport classes from './Edit.module.scss'\nconst Edit: FC<{ to: string }> = ({ to }) => {\n  return (\n    <Link to={to}>\n      <div className={classes.Edit}>\n        <Icon type={'ellipsis'} />\n      </div>\n    </Link>\n  )\n}\nexport default Edit\n","import React, { Component } from 'react'\nimport { WingBlank, List, WhiteSpace, Icon } from 'antd-mobile'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { delRecord } from 'store/record/actions'\nimport API from 'api'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport Edit from 'components/Edit/Edit'\nimport Navbar from 'components/UI/Navbar/Navbar'\n\nimport classes from './Detail.module.scss'\n\nconst Item = List.Item\n\ninterface IProps {\n  delRecord: typeof delRecord\n}\nclass Detail extends Component<RouteComponentProps<{ key: string }> & IProps> {\n  public state = {\n    key: '',\n    type: 'cost',\n    amount: 0,\n    category: '其他',\n    date: moment().format('YYYY-MM-DD'),\n    mark: '預設',\n  }\n  public async componentDidMount() {\n    const { key } = this.props.match.params\n    const records = await API.reqGetRecord(key)\n    const record = Object.values(records)[0]\n    if (record == null) {\n      return\n    }\n    this.setState({\n      key,\n      type: record.type,\n      amount: record.amount,\n      category: record.category,\n      date: record.date,\n      mark: record.mark,\n    })\n  }\n  public deleteHandler = () => {\n    if (!window.confirm('確定要刪除嗎')) {\n      return\n    }\n\n    this.props.delRecord(this.state.key)\n    this.props.history.go(-1)\n  }\n  public render() {\n    // take isLoading state away since rendering null looks weird when router transition\n    // if (this.state.isLoading) {\n    //   return null\n    // }\n    const { category, date, amount, type, mark, key } = this.state\n    const { go } = this.props.history\n    const day =\n      '週' + ['日', '一', '二', '三', '四', '五', '六'][moment(date).day()]\n    return (\n      <div className={classes.Detail}>\n        <Navbar\n          leftIcon={<Icon type={'left'} onClick={() => go(-1)} />}\n          mainItem={<span>詳情</span>}\n          rightIcon={\n            <img\n              src={require(`images/system/刪除.svg`)}\n              alt=\"刪除\"\n              onClick={this.deleteHandler}\n            />\n          }\n        />\n        <WhiteSpace />\n        <WingBlank>\n          <div className={classes.Info}>\n            <header>\n              <div data-img className={`${type}-img ${category}`} />\n              <h2>{category}</h2>\n            </header>\n            <WhiteSpace />\n            <List>\n              <Item>\n                <span className={classes.Title}>類別</span>\n                <span className=\"content\">{type}</span>\n              </Item>\n              <Item>\n                <span className={classes.Title}>金額</span>\n                <span className=\"content\">{amount}</span>\n              </Item>\n              <Item>\n                <span className={classes.Title}>日期</span>\n                <span className=\"content\">{`${date} ${day}`}</span>\n              </Item>\n              <Item>\n                <span className={classes.Title}>備註</span>\n                <span className=\"content\">{mark}</span>\n              </Item>\n            </List>\n            <Edit to={'/log/' + key} />\n          </div>\n        </WingBlank>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(() => ({}), { delRecord })(Detail))\n","import React, { useRef, useEffect, FC } from 'react'\nimport Chartjs from 'chart.js'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport { trans, reverse } from 'utils/other'\n\nimport classes from './Chart.module.scss'\n\nimport { Spending } from 'typings'\n\nconst COLORS = ['#ffda44', '#48c0e3', '#52c5ab', '#f7746d', '#fbb957']\n\ninterface IProps {\n  categories: Array<[string, number]>\n  total: number\n  type: Spending\n}\n\nconst Chart: FC<RouteComponentProps & IProps> = ({\n  categories,\n  type,\n  total,\n  history,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  useEffect(() => {\n    const ctx = canvasRef.current!.getContext('2d')!\n    if (categories.length > 5) {\n      const rest = categories.splice(4)\n      const restSum = rest.reduce((accu, item) => accu + item[1], 0)\n      categories.push(['其他', restSum])\n    }\n    const labels = categories.map((item) => item[0])\n    const numbers = categories.map((item) => item[1])\n    const ratios = numbers.map((n) => ((n / total) * 100).toFixed(1))\n    Chartjs.defaults.global!.elements!.arc!.borderWidth = 12\n    // tslint:disable-next-line: no-unused-expression\n    new Chartjs(ctx, {\n      type: 'doughnut',\n      data: {\n        datasets: [\n          {\n            data: numbers,\n            backgroundColor: COLORS,\n            borderWidth: 0,\n          },\n        ],\n        labels,\n      },\n      options: {\n        legend: {\n          display: true,\n          position: 'right',\n          align: 'start',\n          labels: {\n            boxWidth: 20,\n            fontColor: '#999',\n            filter: (...args: any) => {\n              const legend = args[0]\n              return (legend.text = `${legend.text}     ${ratios.shift()}%`)\n            },\n          },\n        },\n      },\n    })\n  }, [categories, total])\n  return (\n    <div\n      className={classes.Chart}\n      onClick={() => history.replace(`/overview/${reverse(type)}`)}\n    >\n      <span>{trans(type)}</span>\n      <span className={classes.Total}>{total}</span>\n      <canvas ref={canvasRef} />\n    </div>\n  )\n}\n\nexport default withRouter(Chart)\n","import React, { FC } from 'react'\nimport { List, Progress } from 'antd-mobile'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport { Spending } from 'typings'\n\nimport classes from './RecordItem.module.scss'\n\ninterface IProps {\n  category: string\n  amount: number\n  ratio: number\n  bar: number\n  type: Spending\n}\nconst RecordItem: FC<RouteComponentProps & IProps> = ({\n  category,\n  amount,\n  ratio,\n  bar,\n  history,\n  type,\n}) => {\n  return (\n    <List.Item\n      style={{ padding: '0px' }}\n      onClick={() =>\n        history.push(`/category-view/?type=${type}&category=${category}`)\n      }\n    >\n      <div className={classes.Wrapper}>\n        <div data-img className={`${type}-img ${category}`} />\n        <div className={classes.Info}>\n          <span className={classes.Title}>{category}</span>\n          <span className={classes.Amount}>{amount}</span>\n          <span className={classes.Ratio}>{ratio}%</span>\n          <div>\n            <Progress\n              percent={bar}\n              position={'normal'}\n              barStyle={{ borderColor: '#ffda44' }}\n              unfilled={false}\n            />\n          </div>\n        </div>\n      </div>\n    </List.Item>\n  )\n}\n\nexport default withRouter(RecordItem)\n","import React, { FC } from 'react'\nimport { List, WhiteSpace } from 'antd-mobile'\n\nimport RecordItem from './RecordItem/RecordItem'\nimport { trans } from 'utils/other'\n\nimport classes from './RecordList.module.scss'\n\nimport { Spending } from 'typings'\n\ninterface IProps {\n  categories: Array<[string, number]>\n  total: number\n  type: Spending\n}\nconst RecordList: FC<IProps> = ({ categories, total, type }) => {\n  return (\n    <div className={classes.RecordList}>\n      <span className={classes.Title}>{trans(type)}列表</span>\n      <WhiteSpace />\n      <List>\n        {categories.map((item, i) => {\n          const bar = +((item[1] / categories[0][1]) * 100).toFixed(1)\n          const ratio = +((item[1] / total) * 100).toFixed(1)\n          return (\n            <RecordItem\n              key={i}\n              category={item[0]}\n              amount={item[1]}\n              ratio={ratio}\n              bar={bar}\n              type={type}\n            />\n          )\n        })}\n      </List>\n    </div>\n  )\n}\nexport default RecordList\n","import React, { Component, createRef } from 'react'\nimport { WingBlank, WhiteSpace, Icon } from 'antd-mobile'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport MonthSelect from 'components/MonthSelect/MonthSelect'\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport Chart from './Chart/Chart'\nimport RecortList from './RecordList/RecordList'\nimport { setMonth } from 'store/month/actions'\nimport { AppState } from 'store'\nimport { proxyR } from 'utils/other'\n\nimport classes from './Overview.module.scss'\n\nimport { Spending, IFbRecords } from 'typings.js'\n\ninterface IProps {\n  type: Spending\n  records: IFbRecords\n  month: Date\n  setMonth: typeof setMonth\n}\nclass Overview extends Component<\n  RouteComponentProps<{ type: Spending }> & IProps\n> {\n  public canvas = createRef<HTMLCanvasElement>()\n  public sortedCategories: Array<[string, number]> = []\n  public proxyRecords = {} as ReturnType<typeof proxyR>\n  public shouldComponentUpdate(nextProps: IProps) {\n    return nextProps.records !== this.props.records\n  }\n  public render() {\n    const { type } = this.props.match.params\n    const { records, history, month, setMonth } = this.props\n    const proxyRecords = (this.proxyRecords = proxyR(records))\n    const showRecords =\n      proxyRecords[type === 'benefit' ? 'benefitRecords' : 'costRecords']\n    const showTotal =\n      proxyRecords[type === 'benefit' ? 'benefitTotal' : 'costTotal']\n\n    const categoriesMap = Object.values(showRecords).reduce((obj, record) => {\n      const cate = record.category\n      if (!obj[cate]) {\n        obj[cate] = 0\n      }\n      obj[cate] += record.amount\n      return obj\n    }, {} as { [c: string]: number })\n\n    this.sortedCategories = Object.entries(categoriesMap).sort(\n      (a, b) => b[1] - a[1]\n    )\n\n    return (\n      <div className={classes.Overview}>\n        <Navbar\n          leftIcon={<Icon type=\"left\" onClick={() => history.go(-1)} />}\n          mainItem={<MonthSelect month={month} monthChanged={setMonth} />}\n        />\n        <WhiteSpace />\n        <WingBlank>\n          <Chart\n            type={type}\n            categories={this.sortedCategories}\n            total={showTotal}\n          />\n          <RecortList\n            type={type}\n            categories={this.sortedCategories}\n            total={showTotal}\n          />\n        </WingBlank>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  records: state.records,\n  month: state.month,\n})\nexport default withRouter(connect(mapStateToProps, { setMonth })(Overview))\n","import React, { Component } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Icon, List } from 'antd-mobile'\nimport { connect } from 'react-redux'\n\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport { AppState } from 'store'\n\nimport { IFbReminders } from 'typings'\n\nimport classes from './Setting.module.scss'\n\nconst Item = List.Item\nconst Brief = Item.Brief\n\ninterface IProps {\n  reminders: IFbReminders\n}\n\nclass Setting extends Component<RouteComponentProps & IProps> {\n  private getReminderTimes = () => {\n    return Object.values(this.props.reminders)\n      .filter((item) => item.on)\n      .map((item) => item.time)\n      .join('、')\n  }\n  public render() {\n    const history = this.props.history\n    const times = this.getReminderTimes()\n    return (\n      <div className={classes.Setting}>\n        <Navbar\n          leftIcon={<Icon type={'left'} onClick={() => history.go(-1)} />}\n          mainItem={<h3>設置</h3>}\n        />\n        <List>\n          <Item\n            arrow=\"horizontal\"\n            multipleLine={true}\n            onClick={() => history.push('remind')}\n          >\n            智能提醒 <Brief>在以下時間提醒 {times}</Brief>\n          </Item>\n        </List>\n      </div>\n    )\n  }\n}\nexport default withRouter(\n  connect((state: AppState) => ({ reminders: state.reminders }))(Setting)\n)\n","import React, { Component } from 'react'\nimport momnet, { Moment } from 'moment'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Icon, List, Switch } from 'antd-mobile'\nimport { TimePicker } from 'antd'\n\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport { AppState } from 'store'\nimport { delReminder, modReminder, addReminder } from 'store/reminder/actions'\n\nimport 'antd/es/time-picker/style/css'\nimport classes from './Remind.module.scss'\n\nimport { IFbReminders } from 'typings'\n\nconst Item = List.Item\n\ninterface IProps {\n  delReminder: typeof delReminder\n  modReminder: typeof modReminder\n  addReminder: typeof addReminder\n  reminders: IFbReminders\n}\n\nclass Remind extends Component<RouteComponentProps & IProps> {\n  public state = {\n    isOpen: false,\n    value: momnet(),\n  }\n  public pickerChangeHandler = (value: Moment | null) => {\n    if (value) {\n      this.props.addReminder(value.format('HH:mm'))\n    }\n    this.setState({\n      isOpen: false,\n      value,\n    })\n  }\n  public timeChangerHandler = (key: string) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const time = e.target.value\n    if (time === '') {\n      this.props.delReminder(key)\n    }\n    this.props.modReminder(key, { time })\n  }\n  public clickAddHandler = () => {\n    // to avoid repeated trigger open when click Ok button\n    if (this.state.isOpen) {\n      return\n    }\n    this.setState({ isOpen: true })\n  }\n  public componentDidMount() {\n    if (typeof Notification === 'undefined') {\n      alert('該瀏覽器不支持推播')\n      return\n    }\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission()\n    }\n    // ServiceWorkerRegistration.showNotification('記得記帳喔!!')\n    // const notice = new Notification('記得記帳喔!!')\n    // notice.onshow = () => setTimeout(() => notice.close(), 5000)\n  }\n  public render() {\n    const { value, isOpen } = this.state\n    const { reminders, delReminder, modReminder } = this.props\n    const go = this.props.history.go\n\n    return (\n      <div className={classes.Remind}>\n        <Navbar\n          leftIcon={<Icon type={'left'} onClick={() => go(-1)} />}\n          mainItem={<h3>智能提醒</h3>}\n        />\n        <List>\n          {Object.entries(reminders).map(([key, reminder]) => (\n            <Item\n              key={key}\n              thumb={<Icon type=\"cross\" onClick={() => delReminder(key)} />}\n              extra={\n                <Switch\n                  checked={reminder.on}\n                  onChange={(on) => modReminder(key, { on })}\n                />\n              }\n            >\n              <input\n                type=\"time\"\n                value={reminder.time}\n                onChange={this.timeChangerHandler(key)}\n                style={{\n                  backgroundColor: 'transparent',\n                  border: 'none',\n                }}\n              />\n            </Item>\n          ))}\n          <Item onClick={this.clickAddHandler}>\n            <span className={classes.Plus}> &#43; </span>\n            <span>創建提醒 </span>\n            <TimePicker\n              value={value}\n              onChange={this.pickerChangeHandler}\n              open={isOpen}\n              format={'HH:mm'}\n            />\n          </Item>\n        </List>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state: AppState) => ({ reminders: state.reminders })\nexport default withRouter(\n  connect(mapStateToProps, { delReminder, modReminder, addReminder })(Remind)\n)\n","import React, { useRef, useEffect, FC } from 'react'\nimport Chartjs from 'chart.js'\n\nimport classes from './Chart.module.scss'\n\ninterface IProps {\n  monthData: { [d: number]: number }\n  total: number\n}\n\nconst Chart: FC<IProps> = ({ monthData, total }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  useEffect(() => {\n    const ctx = canvasRef.current!.getContext('2d')!\n    const labels = Object.keys(monthData)\n    const data = Object.values(monthData)\n    // tslint:disable-next-line: no-unused-expression\n    new Chartjs(ctx, {\n      type: 'line',\n      data: {\n        datasets: [\n          {\n            data,\n            borderColor: '#2196f3',\n            backgroundColor: '#2196f3',\n            fill: false,\n            borderWidth: 0.5,\n          },\n        ],\n        labels,\n      },\n      options: {\n        legend: {\n          display: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                color: 'rgba(0, 0, 0, 0)',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n        },\n      },\n    })\n  }, [monthData])\n  return (\n    <div className={classes.Chart}>\n      <span className={classes.Total}>{total}</span>\n      <canvas ref={canvasRef} />\n    </div>\n  )\n}\n\nexport default Chart\n","import React, { FC } from 'react'\nimport { List, Progress } from 'antd-mobile'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport classes from './RecordItem.module.scss'\nimport { Spending, IRecord } from 'typings'\n\ninterface IProps {\n  record: IRecord\n  ratio: number\n  bar: number\n  id: string\n  type: Spending\n}\nconst RecordItem: FC<RouteComponentProps & IProps> = ({\n  record,\n  ratio,\n  bar,\n  id,\n  history,\n  type,\n}) => {\n  return (\n    <List.Item\n      style={{ padding: '0px' }}\n      onClick={() => history.push(`/detail/${id}`)}\n    >\n      <div className={classes.Wrapper}>\n        <div data-img className={`${type}-img ${record.category}`} />\n        <div className={classes.Info}>\n          <span className={classes.Title}>{record.category}</span>\n          <span className={classes.Amount}>{record.amount}</span>\n          <span className={classes.Ratio}>{ratio}%</span>\n          <div>\n            <Progress\n              percent={bar}\n              position={'normal'}\n              barStyle={{ borderColor: '#ffda44' }}\n              unfilled={false}\n            />\n          </div>\n          <span className={classes.Date}>{record.date}</span>\n        </div>\n      </div>\n    </List.Item>\n  )\n}\n\nexport default withRouter(RecordItem)\n","import React, { FC } from 'react'\nimport { List, WhiteSpace } from 'antd-mobile'\n\nimport RecordItem from './RecordItem/RecordItem'\nimport { trans } from 'utils/other'\n\nimport classes from './RecordList.module.scss'\n\nimport { Spending, IRecord } from 'typings'\n\ninterface IProps {\n  records: Array<[string, IRecord]>\n  total: number\n  type: Spending\n}\nconst RecordList: FC<IProps> = ({ records, total, type }) => {\n  return (\n    <div className={classes.RecordList}>\n      <span className={classes.Title}>{trans(type)}列表</span>\n      <WhiteSpace />\n      <List>\n        {records.map(([key, record]) => {\n          const bar = +((record.amount / records[0][1].amount) * 100).toFixed(1)\n          const ratio = +((record.amount / total) * 100).toFixed(1)\n          return (\n            <RecordItem\n              key={key}\n              record={record}\n              id={key}\n              ratio={ratio}\n              bar={bar}\n              type={type}\n            />\n          )\n        })}\n      </List>\n    </div>\n  )\n}\nexport default RecordList\n","import React, { Component, createRef } from 'react'\nimport moment from 'moment'\nimport { WingBlank, WhiteSpace, Icon } from 'antd-mobile'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport MonthSelect from 'components/MonthSelect/MonthSelect'\nimport Navbar from 'components/UI/Navbar/Navbar'\nimport Chart from './Chart/Chart'\nimport RecortList from './RecordList/RecordList'\nimport { setMonth } from 'store/month/actions'\nimport { AppState } from 'store'\nimport { proxyR } from 'utils/other'\n\nimport { Spending, IFbRecords, IFbRecord, IRecord } from 'typings.js'\n\nimport classes from './CategoryView.module.scss'\n\ninterface IProps extends RouteComponentProps {\n  type: Spending\n  category: string\n  records: IFbRecords\n  month: Date\n  setMonth: typeof setMonth\n}\nclass Overview extends Component<IProps> {\n  public canvas = createRef<HTMLCanvasElement>()\n  public sortedRecords: Array<[string, IRecord]> = []\n  public proxyRecords = {} as ReturnType<typeof proxyR>\n  public shouldComponentUpdate(nextProps: IProps) {\n    return nextProps.records !== this.props.records\n  }\n  private getAmountIndexedByDate(records: IFbRecords): { [d: number]: number } {\n    const monthArr = Array(moment(this.props.month).daysInMonth() + 1).fill(0)\n    const monthAmountArr = Object.entries(records).reduce(\n      (arr, [key, record]) => {\n        const day = moment(record.date).date()\n        arr[day] += record.amount\n        return arr\n      },\n      monthArr\n    )\n    const amountIndexedByDate = { ...monthAmountArr }\n    delete amountIndexedByDate[1]\n    return amountIndexedByDate\n  }\n  public render() {\n    const { records, history, month, setMonth } = this.props\n    const query = new URLSearchParams(this.props.location.search)\n    const type = query.get('type') as Spending\n    const category = query.get('category') as string\n    const categoryRecords = {} as IFbRecords\n    for (const [key, record] of Object.entries(records)) {\n      if (record.category === category) {\n        categoryRecords[key] = record\n      }\n    }\n    const proxyRecords = (this.proxyRecords = proxyR(categoryRecords))\n    const showRecords =\n      proxyRecords[type === 'benefit' ? 'benefitRecords' : 'costRecords']\n    const showTotal =\n      proxyRecords[type === 'benefit' ? 'benefitTotal' : 'costTotal']\n\n    this.sortedRecords = Object.entries(showRecords).sort(\n      (a, b) => b[1].amount - a[1].amount\n    )\n    return (\n      <div className={classes.CategoryView}>\n        <Navbar\n          leftIcon={<Icon type=\"left\" onClick={() => history.go(-1)} />}\n          mainItem={<MonthSelect month={month} monthChanged={setMonth} />}\n        />\n        <WhiteSpace />\n        <WingBlank>\n          <Chart\n            monthData={this.getAmountIndexedByDate(showRecords)}\n            total={showTotal}\n          />\n          <RecortList\n            type={type}\n            records={this.sortedRecords}\n            total={showTotal}\n          />\n        </WingBlank>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  records: state.records,\n  month: state.month,\n})\nexport default withRouter(connect(mapStateToProps, { setMonth })(Overview))\n","import React, { useEffect, useState } from 'react'\n\nconst style = {\n  position: 'fixed' as 'fixed',\n  zIndex: 999,\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundSize: 'cover',\n  backgroundImage: `url(${require('images/system/載入.jpg')}`,\n}\n// Start loading effect should take only once.\nconst Start = React.memo(() => {\n  const [show, setShow] = useState(true)\n  useEffect(() => {\n    setTimeout(() => setShow(false), 2000)\n  }, [])\n  return show ? <div style={style} /> : null\n})\nexport default Start\n","import React, { Component } from 'react'\nimport {\n  Route,\n  Switch,\n  BrowserRouter,\n  withRouter,\n  HashRouter,\n} from 'react-router-dom'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { connect } from 'react-redux'\n\nimport { getRecord } from 'store/record/actions'\nimport { getReminder } from 'store/reminder/actions'\nimport LogRecord from '../LogRecord/LogRecord'\nimport Main from '../Main/Main'\nimport Detail from '../Detail/Detail'\nimport Overview from '../Overview/Overview'\nimport Setting from '../Setting/Setting'\nimport Remind from '../Remind/Remind'\nimport CategoryView from '../CategoryView/CategoryView'\nimport Start from './Start/Start'\nimport ReminderTimer from './ReminderTimer/ReminderTimer'\nimport { listenAuth } from 'utils/auth'\n\nimport './App.scss'\nconst ANIMATION_MAP = {\n  PUSH: 'forward',\n  POP: 'back',\n}\nconst Routes = withRouter(({ location, history }) => (\n  <TransitionGroup\n    childFactory={(child) =>\n      React.cloneElement(child, {\n        classNames: ANIMATION_MAP[history.action as 'PUSH' | 'POP'],\n      })\n    }\n  >\n    <CSSTransition timeout={400} classNames={'fade'} key={location.pathname}>\n      <Switch location={location}>\n        <Route path=\"/log/:key\" component={LogRecord} />\n        <Route path=\"/log/\" component={LogRecord} />\n        <Route path=\"/overview/:type\" component={Overview} />\n        <Route path=\"/remind/\" component={Remind} />\n        <Route path=\"/setting/\" component={Setting} />\n        <Route path=\"/category-view/\" component={CategoryView} />\n        <Route path=\"/detail/:key\" component={Detail} />\n        <Route path=\"/\" component={Main} />\n      </Switch>\n    </CSSTransition>\n  </TransitionGroup>\n))\n\ninterface IProps {\n  getRecord: typeof getRecord\n  getReminder: typeof getReminder\n}\n\nclass App extends Component<IProps> {\n  public componentDidMount() {\n    listenAuth()\n    this.props.getRecord(new Date())\n    this.props.getReminder()\n  }\n  public render() {\n    console.count('render app')\n    return (\n      <div>\n        <Start />\n        <ReminderTimer />\n        <HashRouter>\n          <Routes />\n        </HashRouter>\n      </div>\n    )\n  }\n}\n\nexport default connect(() => ({}), {\n  getRecord,\n  getReminder,\n})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './firebase.ts'\n\nimport App from 'containers/App/App'\nimport store from 'store'\nimport * as serviceWorker from './serviceWorker'\n\nimport './scss/index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__1MyNc\",\"Avatar\":\"Sidebar_Avatar__Q0kPC\",\"Log\":\"Sidebar_Log__3P545\",\"List\":\"Sidebar_List__3Uk55\",\"Item\":\"Sidebar_Item__1Y4Bm\",\"Active\":\"Sidebar_Active__3K_JP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TypeSelect\":\"TypeSelect_TypeSelect__3xAJi\",\"Main\":\"TypeSelect_Main__3JFup\",\"Pop\":\"TypeSelect_Pop__1blN8\",\"Option\":\"TypeSelect_Option__Ty9yD\",\"Active\":\"TypeSelect_Active__3Z3cf\",\"dropdown\":\"TypeSelect_dropdown__Xaz8L\",\"Mask\":\"TypeSelect_Mask__38vM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayRecord\":\"DayRecord_DayRecord__3KqIA\",\"Info\":\"DayRecord_Info__3hh7x\",\"Total\":\"DayRecord_Total__2dSRS\",\"Item\":\"DayRecord_Item__1WJ27\",\"Amount\":\"DayRecord_Amount__1jeVu\",\"Title\":\"DayRecord_Title__3Id1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Detail\":\"Detail_Detail__2ZuIc\",\"Info\":\"Detail_Info__1shS3\",\"Title\":\"Detail_Title__54eJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RecordItem_Wrapper__6agUo\",\"Info\":\"RecordItem_Info__1hFfz\",\"Amount\":\"RecordItem_Amount__13iiD\",\"Ratio\":\"RecordItem_Ratio__3ZuLu\",\"Date\":\"RecordItem_Date__1veUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RecordItem_Wrapper__ILref\",\"Info\":\"RecordItem_Info__2rkJ5\",\"Amount\":\"RecordItem_Amount__3z4ph\",\"Ratio\":\"RecordItem_Ratio__33bhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthSelect\":\"MonthSelect_MonthSelect__OEnUE\",\"Dropdown\":\"MonthSelect_Dropdown__34iQo\",\"Monthpicker\":\"MonthSelect_Monthpicker__3JQdZ\",\"Mask\":\"MonthSelect_Mask__2syWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inputs\":\"Inputs_Inputs__bIdwf\",\"Input\":\"Inputs_Input__1xfn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelect\":\"DateSelect_DateSelect__29-l0\",\"Toggle\":\"DateSelect_Toggle__3jW_D\",\"Dropdown\":\"DateSelect_Dropdown__84-oj\"};"],"sourceRoot":""}